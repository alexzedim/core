# traefik-dynamic.yml - Enhanced dynamic configuration with Cloudflare Origin Certificates
http:
    routers:
        # Traefik Dashboard Router
        traefik-dashboard:
            rule: "Host(`traefik.cmnw.ru`)"
            entryPoints:
                - websecure
            service: api@internal
            middlewares:
                - traefik-auth
                - security-headers
            tls:
                options: cloudflare-tls

        # Grafana Router
        grafana:
            rule: "Host(`grafana.cmnw.ru`)"
            entryPoints:
                - websecure
            service: grafana
            middlewares:
                - security-headers
            tls:
                options: cloudflare-tls

        # Portainer Router
        portainer:
            rule: "Host(`control.cmnw.ru`)"
            entryPoints:
                - websecure
            service: portainer
            middlewares:
                - security-headers
            tls:
                options: cloudflare-tls

        # MinIO API Router
        minio-api:
            rule: "Host(`s3.cmnw.ru`)"
            entryPoints:
                - websecure
            service: minio-api
            middlewares:
                - security-headers
            tls:
                options: cloudflare-tls

        # MinIO Console Router
        minio-console:
            rule: "Host(`console-s3.cmnw.ru`)"
            entryPoints:
                - websecure
            service: minio-console
            middlewares:
                - security-headers
            tls:
                options: cloudflare-tls

        # Prometheus Router (optional, for monitoring)
        prometheus:
            rule: "Host(`prometheus.cmnw.ru`)"
            entryPoints:
                - websecure
            service: prometheus
            middlewares:
                - traefik-auth
                - security-headers
            tls:
                options: cloudflare-tls

    services:
        # Grafana Service
        grafana:
            loadBalancer:
                servers:
                    - url: "http://grafana:3000"
                healthCheck:
                    path: /api/health
                    interval: 30s
                    timeout: 5s

        # Portainer Service
        portainer:
            loadBalancer:
                servers:
                    - url: "http://portainer:9000"
                healthCheck:
                    path: /api/system/status
                    interval: 30s

        # MinIO API Service
        minio-api:
            loadBalancer:
                servers:
                    - url: "http://minio:9000"
                healthCheck:
                    path: /minio/health/live
                    interval: 30s

        # MinIO Console Service
        minio-console:
            loadBalancer:
                servers:
                    - url: "http://minio:9001"

        # Prometheus Service
        prometheus:
            loadBalancer:
                servers:
                    - url: "http://prometheus:9090"
                healthCheck:
                    path: /-/healthy
                    interval: 30s

    middlewares:
        # Traefik Dashboard auth
        traefik-auth:
            basicAuth:
                users:
                    # Generate with: echo $(htpasswd -nb admin yourpassword) | sed -e s/\\$/\\$\\$/g
                    - "traefik:$2y$05$6aIIml9lzHJN1mG/ZYwJReiBpR5WzyiGC8uW5Rb5ToIG35Kcb7CW6" # Replace with your actual hash

        # Security headers for all services
        security-headers:
            headers:
                customRequestHeaders:
                    X-Forwarded-Proto: "https"
                customResponseHeaders:
                    X-Frame-Options: "SAMEORIGIN"
                    X-Content-Type-Options: "nosniff"
                    X-XSS-Protection: "1; mode=block"
                    Referrer-Policy: "strict-origin-when-cross-origin"
                    Permissions-Policy: "camera=(), microphone=(), geolocation=()"
                contentSecurityPolicy: "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'"

        # Rate limiting middleware (optional)
        rate-limit:
            rateLimit:
                burst: 100
                average: 50

        # CORS middleware (optional)
        cors:
            headers:
                accessControlAllowMethods:
                    - GET
                    - OPTIONS
                    - PUT
                    - POST
                    - DELETE
                accessControlAllowHeaders:
                    - "*"
                accessControlAllowOriginList:
                    - "https://cmnw.ru"
                    - "https://*.cmnw.ru"
                accessControlMaxAge: 100
                addVaryHeader: true

# TLS Configuration with Cloudflare Origin Certificates
tls:
    certificates:
        # Wildcard certificate for *.cmnw.ru
        - certFile: /certificates/cmnw.ru.pem
          keyFile: /certificates/cmnw.ru.key
          stores:
              - cloudflare-tls

    options:
        cloudflare-tls:
            minVersion: "VersionTLS12"
            cipherSuites:
                - "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
                - "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"
                - "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
                - "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"
            curvePreferences:
                - "CurveP521"
                - "CurveP384"
            sniStrict: true
